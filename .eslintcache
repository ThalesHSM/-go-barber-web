[{"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\index.tsx":"1","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\services\\api.ts":"2","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\pages\\SignIn\\styles.ts":"3","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\components\\input\\index.tsx":"4","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\context\\AuthContext.tsx":"5","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx":"6","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\components\\tooltip\\styles.ts":"7"},{"size":207,"mtime":1612124931783,"results":"8","hashOfConfig":"9"},{"size":123,"mtime":1612127397829,"results":"10","hashOfConfig":"9"},{"size":1224,"mtime":1612124931786,"results":"11","hashOfConfig":"9"},{"size":1625,"mtime":1612124931778,"results":"12","hashOfConfig":"9"},{"size":1322,"mtime":1612145387105,"results":"13","hashOfConfig":"9"},{"size":2133,"mtime":1612142945631,"results":"14","hashOfConfig":"9"},{"size":801,"mtime":1612124931781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jt14j6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\index.tsx",[],["32","33"],"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\components\\input\\index.tsx",[],"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\context\\AuthContext.tsx",[],"C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx",["34"],"import React, { useRef, useCallback, useContext } from \"react\";\r\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\r\nimport { Form } from \"@unform/web\";\r\nimport { FormHandles } from \"@unform/core\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport getValidationErrors from \"../../util/getValidationErrors\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nimport Input from \"../../components/input\";\r\nimport Button from \"../../components/button\";\r\n\r\nimport { Container, Content, Background } from \"./styles\";\r\n\r\ninterface SignInFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { signIn } = useContext(AuthContext);\r\n\r\n  const handleSubmit = useCallback(async (data: SignInFormData) => {\r\n    try {\r\n      formRef.current?.setErrors({});\r\n\r\n      const schema = Yup.object().shape({\r\n        email: Yup.string()\r\n          .required(\"E-mail obrigatório\")\r\n          .email(\"Digite um email válido\"),\r\n        password: Yup.string().required(\"Senha obrigatória\"),\r\n      });\r\n      await schema.validate(data, {\r\n        abortEarly: false,\r\n      });\r\n\r\n      signIn({\r\n        email: data.email,\r\n        password: data.password,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      const errors = getValidationErrors(err);\r\n\r\n      formRef.current?.setErrors(errors);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <img src={logo} alt=\"GoBarber\" />\r\n\r\n        <Form ref={formRef} onSubmit={handleSubmit}>\r\n          <h1>Faça seu Login</h1>\r\n\r\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n          <Input\r\n            name=\"password\"\r\n            icon={FiLock}\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n          />\r\n          <Button type=\"submit\">Entrar</Button>\r\n\r\n          <a href=\"A\">Esqueci minha senha</a>\r\n        </Form>\r\n        <a href=\"B\">\r\n          <FiLogIn /> Criar Conta\r\n        </a>\r\n      </Content>\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\asus\\Documents\\Aulas\\Conceitos-Dev\\06-gobarber-web\\src\\components\\tooltip\\styles.ts",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":51,"column":6,"nodeType":"41","endLine":51,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'signIn'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [signIn]",{"range":"48","text":"49"},[1442,1444],"[signIn]"]